'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _StickySection = require('./StickySection.styles');

var _StickySection2 = _interopRequireDefault(_StickySection);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _PropTypes = require('../PropTypes');

var _Contexts = require('../Contexts');

var _Hook = require('./Hook');

var _Hook2 = _interopRequireDefault(_Hook);

var _Sticky = require('./Sticky');

var _Sticky2 = _interopRequireDefault(_Sticky);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var StickySection = function (_Component) {
	_inherits(StickySection, _Component);

	function StickySection() {
		var _ref;

		var _temp, _this, _ret;

		_classCallCheck(this, StickySection);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = StickySection.__proto__ || Object.getPrototypeOf(StickySection)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
			stickyStyle: {},
			position: 'top',
			setStickyStyle: function setStickyStyle(stickyStyle) {
				_this.setState({ stickyStyle: stickyStyle });
			},
			stickyZIndex: 1
		}, _this.styles = (0, _StickySection2.default)(), _this.handleTopEnter = function (entryState) {
			_this.setPosition(entryState.isTopBoundary ? 'fixed' : 'top');
		}, _this.handleTopLeave = function (entryState) {
			if (entryState.isOffsetTop) {
				_this.setPosition('fixed');
			}
		}, _this.handleIntersect = function (entryState) {
			if (entryState.isTopBoundary || entryState.isBottomVisible && !entryState.isTopVisible) {
				_this.setPosition('fixed');
			} else if (entryState.isTopVisible || entryState.isOffsetBottom) {
				_this.setPosition('top');
			} else if (entryState.isOffsetTop) {
				_this.setPosition('bottom');
			}
		}, _temp), _possibleConstructorReturn(_this, _ret);
	}

	_createClass(StickySection, [{
		key: 'setPosition',
		value: function setPosition(position) {
			if (this.state.position !== position) {
				this.setState({ position: position });
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    children = _props.children,
			    sticky = _props.sticky,
			    stickyZIndex = _props.stickyZIndex,
			    style = _props.style,
			    debugId = _props.debugId,
			    other = _objectWithoutProperties(_props, ['children', 'sticky', 'stickyZIndex', 'style', 'debugId']),
			    stickyStyle = this.state.stickyStyle,
			    styles = this.styles;

			return _react2.default.createElement(
				_Contexts.StickyContext.Provider,
				{ value: this.state },
				_react2.default.createElement(
					'div',
					_extends({}, other, { style: styles.container(style) }),
					_react2.default.createElement('div', { style: stickyStyle }),
					_react2.default.createElement(_Hook2.default, {
						debugId: debugId + '(top)',
						onEnter: this.handleTopEnter,
						onLeave: this.handleTopLeave,
						style: styles.topHook
					}),
					children,
					sticky && _react2.default.createElement(
						_Sticky2.default,
						{ style: styles.sticky(stickyZIndex) },
						sticky
					),
					_react2.default.createElement(_Hook2.default, {
						debugId: debugId + '(bottom)',
						onIntersect: this.handleIntersect,
						style: styles.bottomHook(stickyStyle.height)
					})
				)
			);
		}
	}]);

	return StickySection;
}(_react.Component);

StickySection.propTypes = {
	children: _propTypes2.default.node,
	sticky: _PropTypes.stickyNodeType,
	style: _propTypes2.default.object,
	stickyZIndex: _propTypes2.default.number,
	debugId: _propTypes2.default.string
};
exports.default = StickySection;